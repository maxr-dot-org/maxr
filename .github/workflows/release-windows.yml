name: release-windows

on:
  workflow_dispatch:
  push:
    tags:
      - 'release-*'

jobs:
  release-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-tags: true

    - name: checkout premake5
      uses: actions/checkout@v4
      with:
        repository: premake/premake-core
        path: premake-build

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build premake5
      run: |
        $vcvarall_path = vswhere -find VC\Auxiliary\Build\vcvarsall.bat
        cmd.exe /c "call ""$vcvarall_path"" x86_amd64 && cd premake-build && nmake -f Bootstrap.mak MSDEV=vs2022 windows-msbuild PLATFORM=Win32 CONFIG=release"
        cp premake-build/bin/release/premake5.exe ./

    - name: Retrieve CrashRpt_v.1.4.3_r1645
      run: |
        curl -o CrashRpt_v.1.4.3_r1645.7z https://kumisystems.dl.sourceforge.net/project/crashrpt/CrashRpt_v.1.4.3_r1645.7z
        7z x -o"./CrashRpt_v.1.4.3_r1645" "CrashRpt_v.1.4.3_r1645.7z" "lib/*.*" "include/*.*" "bin/CrashRpt1403.dll" "bin/CrashSender1403.exe" "bin/crashrpt_lang.ini"
        7z e -o"data/CrashRpt"          CrashRpt_v.1.4.3_r1645.7z "lang_files/*.ini"

    - name: run premake5
      run: |
        ./premake5.exe vs2022 --to=solution/vs2022 --crashRpt_root=CrashRpt_v.1.4.3_r1645

    - name: build
      run: |
        cd solution/vs2022
        nuget install packages.config -OutputDirectory packages
        msbuild.exe /property:Configuration=Release Maxr.sln

    - name: Create nsis installer
      uses: joncloud/makensis-action@v4.1
      with:
        script-file: mk/win32/installer/maxr-installer.nsi

    - name: Upload maxr
      uses: actions/upload-artifact@v4
      with:
        name: maxr-installer.exe
        path: mk/win32/installer/maxr-*.exe

    - name: Upload pdb files
      uses: actions/upload-artifact@v4
      with:
        name: maxr_pdbs
        path: |
          data/*.pdb
          solution/vs2022/bin/Release/*.pdb
